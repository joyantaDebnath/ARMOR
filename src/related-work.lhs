\section{Related Work}
Considering the significant role and wide adaption of X.509 PKI, the research community has critically analyzed the implementation and deployment of X.509 PKI in recent years. In the following, we provide a concise overview of these past research efforts and explain how our work diverges from them. \\
\textbf{Identifying Implementation Flaws Through Testing.} In validating X.509 Certificate Chain Validation Logic (CCVL), testing methodologies such as fuzzing and symbolic execution have emerged as powerful tools for uncovering logical flaws in implementing open-source Transport Layer Security (TLS) libraries. The fuzzing technique, for example, operates by mutating valid seed certificates to generate irregular inputs, which can reveal unexpected, potentially problematic behaviors in the implementation under scrutiny. Symbolic execution, on the other hand, systematically explores all possible routes a program could take during its execution, helping to unearth more deeply embedded semantic flaws. While these techniques have successfully identified numerous compliance issues, as evidenced by previous studies, they naturally bear the risk of false negativesâ€”issues that remain undetected, especially when these logical flaws are common across all tested libraries. To counter this challenge, the presence of a reference implementation that could serve as an oracle, ensuring the accuracy of the implementation by providing a true standard against which the test results can be verified, becomes crucial. Overcoming this false negativity issue is one of the primary goals of the work presented in this paper. \\
\textbf{High-assurance Implementations.} Numerous endeavors have been made to implement and formally verify cryptographic libraries. However, creating a formally verified X.509 CCVL proves to be nontrivial due to the context-sensitivity of DER-encoded X.509 certificate grammar. There are efforts towards developing provably correct parsers for X.509 certificates that can yield formally verified code for certificate parsing. For example, Tao et al. developed a memory-safe and formally correct encoder for X.509 certificates, while our work primarily targets certificate decoding. An attempt to formulate context-free specifications for X.509 was made by Barenghi et al. Larisch et al. proposed Hammurabi, a system that separates high-level certificate validation policies from low-level validation mechanisms. However, it does not provide clear guidelines on rule allocation between these categories. Despite advancements, all these attempts come with limitations, such as restricted crypto support and simplification of X.509 grammar to avoid context-sensitivity, and they don't provide comprehensive assurance for both syntactic and semantic requirements. The CERES project undertook re-engineering efforts to decouple and formally represent the syntactic and semantic requirements. However, it only considers a limited segment of the X.509 specifications, and its correctness has not been formally proven, which is the research gap we address in this paper. \\
\textbf{Measurements on Incorrect and Insecure Deployment.} Measurement studies have unveiled that the X.509 PKI is intentionally deployed to allow TLS interceptions by antivirus programs, parental control applications, middleboxes, and proxy servers. This intervention disrupts the end-to-end security guarantees that TLS is supposed to provide, posing potential security risks. Furthermore, several studies also underline a key issue: user unawareness. Many users lack a proper understanding of X.509 PKI and TLS, potentially overlooking the browser's certificate-related warnings and helping adversaries compromise their own trust anchors. \\
\textbf{Enhancements to Certificate Revocation Protocols.} Research into certificate revocation in the X.509 PKI ecosystem focuses on how to swiftly and effectively relay revocation information to users, to minimize the window of vulnerability. This window occurs between the instance a certificate is revoked and when this information reaches the end-user, during which an attacker could potentially exploit the invalidated certificate. The traditional methods, such as Certificate Revocation Lists (CRLs) and the Online Certificate Status Protocol (OCSP), often suffer from latency issues and excessive network overhead, respectively. A range of innovative solutions have emerged to counter these limitations. For instance, CRLite optimizes the process by condensing all CRLs into a more manageable data structure, which significantly enhances the speed of revocation status queries. OCSP stapling is another such improvement, where the server periodically obtains the OCSP response and then delivers it to the client along with the certificate, reducing the need for individual OCSP requests by clients. More recent developments include browser-centric solutions such as OneCRL from Mozilla and CRLSets from Google, which employ a rapidly updatable, centralized list of revoked certificates. \\
\textbf{Enhancements and Alternatives to the Trust Model.} This line of research area aims to enhance the current trust model of X.509 PKI to improve its reliability and security. The X.509 PKI model operates under the substantial assumption that CAs are trustworthy entities that always diligently authenticate an identity before certificate issuance. Nevertheless, real-world security breaches have illustrated that CAs can be negligent or compromised, resulting in certificates issued to incorrect identities. In response, researchers have proposed log-based solutions to document certificate issuance events on a central log server, allowing any interested party to scrutinize CA actions. Although these log-based solutions decentralize the absolute trust placed in CAs, distributing trust among other entities within the PKI framework, these introduce additional trust in the log operators. This trust distribution issue is recently addressed by incorporating blockchain technology into log-server operations, effectively decentralizing trust. Despite the potential benefits of leveraging blockchain, none of these have any real-world deployment yet.

Alternative trust models to X.509 PKI exist, such as SDSI/SPKI and PGP. While these models offer innovative solutions, they are generally seen as less scalable for broad internet usage involving billions of users. For instance, the SDSI/SPKI model is predicated on using local names and localized trust, which may not scale well in a global context. Similarly, the PGP web of trust model, while being very flexible, requires a significant amount of manual user intervention, making it impractical for large-scale, automated systems. Another alternative is the DANE protocol, which leverages the DNSSEC infrastructure to bind X.509 certificates to DNS names. This circumvents the need for CAs entirely by publishing TLSA records in DNS that specify which certificates or CA should be trusted for a particular service. However, the DANE protocol has its own set of complexities and challenges, including the need for widespread DNSSEC adoption, which has been slow due to various technical and operational challenges.

